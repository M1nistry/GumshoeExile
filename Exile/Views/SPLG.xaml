<UserControl x:Class="Exile.Views.SPLG"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Exile.Views"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:customControls="clr-namespace:Exile.CustomControls"
             xmlns:models="clr-namespace:Exile.Models"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance models:SPLGViewModel}"
             d:DesignHeight="600" d:DesignWidth="420">
    <UserControl.Resources>
        <DataTemplate x:Key="TemplatePartTab">
            <Grid Margin="-5,0,0,0">
                <Grid.Resources>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </Grid.Resources>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Label Content="Serial:"/>
                <TextBox x:Name="TextBoxSerial" Grid.Row="0" Grid.Column="1" MinWidth="150" Text="{Binding SpareSerial, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <Label Content="MPN:" Grid.Row="0" Grid.Column="2"/>
                <TextBox x:Name="TextBoxMPN" Grid.Row="0" Grid.Column="3" Width="150" Text="{Binding SpareMPN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <Label Content="Serial:" Grid.Row="1" Grid.Column="0"/>
                <TextBox x:Name="TextBoxSerialFaulty" Grid.Row="1" Grid.Column="1" MinWidth="150" Text="{Binding FaultSerial, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <Label Content="MPN:" Grid.Row="1" Grid.Column="2"/>
                <TextBox x:Name="TextBoxMPNFaulty" Grid.Row="1" Grid.Column="3" Width="150" Text="{Binding FaultMPN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <Label Content="Connote:" Grid.Row="2" Grid.Column="0"/>
                <TextBox x:Name="TextBoxConnote" Grid.Row="2" Grid.Column="1" Text="{Binding Connote, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                
                <Label Content="Line:" Grid.Row="2" Grid.Column="2"/>
                <TextBox x:Name="TextBoxLine" Grid.Row="2" Grid.Column="3"  Text="{Binding Line, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </DataTemplate>
        <models:RatingConverter x:Key="RatingConverter"/>
        <Style TargetType="{x:Type TextBox}" x:Key="SearchMetroTextBox" BasedOn="{StaticResource MetroButtonTextBox}">
            <Setter Property="controls:TextBoxHelper.ButtonTemplate">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid x:Name="contentPresenter"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          Margin="{TemplateBinding Padding}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          Opacity="0.75">
                                <Canvas Width="20"
                                Height="20"
                                Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0"
                                        Margin="0,-1,0,0">
                                    <Path Width="16"
                                  Height="18"
                                  Stretch="Fill"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="F1 M 52,34L 39,34L 39,21L 24,21L 24,55L 52,55L 52,34 Z M 55.9999,59L 20,59L 20,17L 43.25,17L 55.9999,29.75L 55.9999,59 Z M 43,22.25L 43,30L 50.7499,30L 43,22.25 Z M 31,53L 31,45L 34,45C 35.6569,45 37,45.8431 37,47.5C 37,49.1569 35.6569,50 34,50L 33,50L 33,53L 31,53 Z M 34,48C 34.5523,48 35,48.0523 35,47.5C 35,46.9477 34.5523,47 34,47L 33,47L 33,48L 34,48 Z M 45,53L 45,45L 50,45L 50,47L 47,47L 47,48L 49,48L 49,50L 47,50L 47,53L 45,53 Z M 38,45L 41,45C 42.6569,45 44,46.3431 44,48L 44,50C 44,51.6568 42.6569,53 41,53L 38,53L 38,45 Z M 42,50L 42,48C 42,47.4477 41.5523,47 41,47L 40,47L 40,51L 41,51C 41.5523,51 42,50.5523 42,50 Z " />
                                </Canvas>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                             Value="True">
                                <Setter TargetName="contentPresenter"
                                Property="Opacity"
                                Value="1" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                             Value="False">
                                <Setter TargetName="contentPresenter"
                                Property="Opacity"
                                Value=".5" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                             Value="False">
                                <Setter Property="Foreground"
                                Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="MinHeight" Value="22"/>
        </Style>
    </UserControl.Resources>


    <Grid x:Name="GridSplg" Height="Auto">
        <Grid.Resources>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="26"/>
            <RowDefinition Height="26"/>
            <RowDefinition Height="26"/>
            <RowDefinition Height="105"/>
            <RowDefinition Height="26"/>
            <RowDefinition Height="26"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="70"/>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <ComboBox x:Name="ComboBoxSystem" Width="65" Margin="0,0,2,0" Grid.Row="0" Grid.Column="0" Height="22" MinHeight="22" MaxHeight="22" VerticalAlignment="Center" SelectedIndex="{Binding Path=CurrentTicket.System}">
            <ComboBoxItem Content=""/>
            <ComboBoxItem Content="TAS"/>
            <ComboBoxItem Content="SIIAM"/>
            <ComboBoxItem Content="Other"/>
        </ComboBox>
        <TextBox x:Name="TextBoxTicket" Width="Auto" Grid.Row="0" Grid.Column="1" Text="{Binding CurrentTicket.Ticket, Mode=TwoWay}"/>

        <Label Content="Order:" Grid.Row="0" Grid.Column="2"/>
        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="3">
            <TextBox x:Name="TextBoxOrder" Width="Auto" MinWidth="93" Margin="0,0,2,0" Text="{Binding CurrentTicket.Order, Mode=TwoWay}"/>
            <CheckBox x:Name="CheckBoxOnHold" Width="50" Content="Hold" IsChecked="{Binding CurrentTicket.Hold, Mode=TwoWay}"/>
        </StackPanel>

        <Label Content="Reference:" Grid.Row="1" Grid.Column="0"/>
        <TextBox x:Name="TextBoxReference" Width="Auto" Grid.Row="1" Grid.Column="1" Text="{Binding CurrentTicket.Reference, Mode=TwoWay}"/>

        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2">
            <Label Content="Node" Width="50"/>
            <TextBox x:Name="TextBoxNode" Width="55" Margin="0,0,1,0" Text="{Binding CurrentTicket.Node, Mode=TwoWay}"/>
            <Label Content="PuDo"/>
            <TextBox x:Name="TextBoxPudo" Width="55" Text="{Binding CurrentTicket.Pudo, Mode=TwoWay}"/>
        </StackPanel>

        <Label Content="AGS:" Grid.Row="2" Grid.Column="0"/>
        <customControls:ComboBoxMultiColumn x:Name="ComboMultiAGS" Grid.Row="2" Grid.Column="1" Height="22" MinHeight="22" MaxHeight="22" VerticalAlignment="Center" PreviewTextInput="ComboMultiAGS_PreviewTextInput" PreviewKeyDown="ComboMultiAGS_PreviewKeyDown"/>
            <!--<ComboBox.Style>
                <Style TargetType="ComboBox" BasedOn="{StaticResource ResourceKey={x:Type ComboBox}}">
                    <Setter Property="MinHeight" Value="22"></Setter>
                </Style>
            </ComboBox.Style>-->
        

        <Label Content="Date:" Grid.Row="2" Grid.Column="2" />
        <DatePicker Grid.Row="2" Grid.Column="3" Width="150" HorizontalAlignment="Left" SelectedDate="{Binding CurrentTicket.DateDropOff, Mode=TwoWay}">
            <DatePicker.Style>
                <Style TargetType="DatePicker" BasedOn="{StaticResource ResourceKey={x:Type DatePicker}}">
                    <Setter Property="MinHeight" Value="22"/>
                    <Setter Property="Height" Value="22"/>
                </Style>
            </DatePicker.Style>
        </DatePicker>

        <TabControl x:Name="PartsTabControl" Width="Auto" Height="Auto" Grid.Row="3" Grid.ColumnSpan="4" Grid.Column="0" ItemsSource="{Binding CurrentTicket.Parts, Mode=TwoWay}" ContentTemplate="{StaticResource TemplatePartTab}" Margin="0,0,-5,-5" SelectionChanged="PartsTabControl_SelectionChanged">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <TextBlock Text="{Binding Header}" FontSize="14"/>
                    </TextBlock>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <!-- <Controls:MetroTabItem x:Name="TabItemAddParts" Header="+" CloseButtonEnabled="False" FontSize="14" PreviewMouseDown="TabItemAddParts_PreviewMouseDown" Style="{StaticResource StyleHeaderSize}"/> -->
        </TabControl>

        <Label Content="RTC:" Grid.Row="4" Grid.Column="0"/>
        <TextBox x:Name="TextBoxRTC" Grid.Row="4" Grid.Column="1" Text="{Binding CurrentTicket.RTC, Mode=TwoWay}"/>

        <Label Content="PDF:" Grid.Row="4" Grid.Column="2"/>
        <StackPanel Grid.Row="4" Grid.Column="3" Height="22" Orientation="Horizontal">
            <StackPanel.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                
                    <Canvas x:Key="appbar_page_file_pdf" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                        <Path Width="35.9999" Height="42" Canvas.Left="20" Canvas.Top="17" Stretch="Fill" Fill="{DynamicResource BlackBrush}" Data="F1 M 52,34L 39,34L 39,21L 24,21L 24,55L 52,55L 52,34 Z M 55.9999,59L 20,59L 20,17L 43.25,17L 55.9999,29.75L 55.9999,59 Z M 43,22.25L 43,30L 50.7499,30L 43,22.25 Z M 31,53L 31,45L 34,45C 35.6569,45 37,45.8431 37,47.5C 37,49.1569 35.6569,50 34,50L 33,50L 33,53L 31,53 Z M 34,48C 34.5523,48 35,48.0523 35,47.5C 35,46.9477 34.5523,47 34,47L 33,47L 33,48L 34,48 Z M 45,53L 45,45L 50,45L 50,47L 47,47L 47,48L 49,48L 49,50L 47,50L 47,53L 45,53 Z M 38,45L 41,45C 42.6569,45 44,46.3431 44,48L 44,50C 44,51.6568 42.6569,53 41,53L 38,53L 38,45 Z M 42,50L 42,48C 42,47.4477 41.5523,47 41,47L 40,47L 40,51L 41,51C 41.5523,51 42,50.5523 42,50 Z "/>
                    </Canvas>
                </ResourceDictionary>
            </StackPanel.Resources>
            <Button Width="18" MinHeight="20" MaxHeight="20" Background="#00D5D5D5" Padding="0,1" Margin="2,0,0,0" >
                <Rectangle Width="18" Height="20" Opacity="0.75" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Margin="-3,-3">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_page_file_pdf}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <TextBox x:Name="TextBoxPdf" Margin="3,0,0,0" MinWidth="125" IsReadOnly="True"/>
        </StackPanel>
        <!-- <TextBox Style="{StaticResource SearchMetroTextBox}" Grid.Row="4" Grid.Column="3" Height="22" VerticalAlignment="Center" VerticalContentAlignment="Center"/> -->

        <Label Content="Wiki:" Grid.Row="5" Grid.Column="0"/>
        <ComboBox x:Name="ComboBoxWiki" Grid.Row="5" Grid.Column="1" Height="22" MaxHeight="22" VerticalAlignment="Center" IsEditable="True" ItemsSource="{Binding CurrentTicket.WikiIds, Mode=TwoWay}" PreviewKeyDown="ComboBoxWiki_PreviewKeyDown">
            <ComboBox.Style>
                <Style TargetType="ComboBox" BasedOn="{StaticResource ResourceKey={x:Type ComboBox}}">
                    <Setter Property="MinHeight" Value="22"></Setter>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <Label Content="Rating:" Grid.Row="5" Grid.Column="2"/>
        <StackPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="3">
            <StackPanel.Resources>
                <Canvas x:Key="appbar_star" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                    <Path Width="41.1667" Height="38" Canvas.Left="18" Canvas.Top="18" Stretch="Fill" Fill="{DynamicResource BlackBrush}" Data="F1 M 17.4167,32.25L 32.9107,32.25L 38,18L 43.0893,32.25L 58.5833,32.25L 45.6798,41.4944L 51.4583,56L 38,48.0833L 26.125,56L 30.5979,41.7104L 17.4167,32.25 Z "/>
                </Canvas>
            </StackPanel.Resources>
            <ToggleButton x:Name="Button1Star" Style="{DynamicResource MetroCircleToggleButtonStyle}" ToolTip="Bold" Width="30" Height="30" BorderThickness="0" Margin="0,-2,0,0" IsChecked="{Binding CurrentTicket.Rating, Converter={StaticResource RatingConverter}, ConverterParameter=1, Mode=TwoWay}">
                <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_star}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </ToggleButton>
            <ToggleButton x:Name="Button2Star" Style="{DynamicResource MetroCircleToggleButtonStyle}" ToolTip="Bold" Width="30" Height="30" BorderThickness="0" Margin="0,-2,0,0" IsChecked="{Binding CurrentTicket.Rating, Converter={StaticResource RatingConverter}, ConverterParameter=2, Mode=TwoWay}">
                <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_star}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </ToggleButton>
            <ToggleButton x:Name="Button3Star" Style="{DynamicResource MetroCircleToggleButtonStyle}" ToolTip="Bold" Width="30" Height="30" BorderThickness="0" Margin="0,-2,0,0" IsChecked="{Binding CurrentTicket.Rating, Converter={StaticResource RatingConverter}, ConverterParameter=3, Mode=TwoWay}">
                <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_star}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </ToggleButton>
            <ToggleButton x:Name="Button4Star" Style="{DynamicResource MetroCircleToggleButtonStyle}" ToolTip="Bold" Width="30" Height="30" BorderThickness="0" Margin="0,-2,0,0" IsChecked="{Binding CurrentTicket.Rating, Converter={StaticResource RatingConverter}, ConverterParameter=4, Mode=TwoWay}">
                <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_star}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </ToggleButton>
            <ToggleButton x:Name="Button5Star" Style="{DynamicResource MetroCircleToggleButtonStyle}" ToolTip="Bold" Width="30" Height="30" BorderThickness="0" Margin="0,-2,0,0" IsChecked="{Binding CurrentTicket.Rating, Converter={StaticResource RatingConverter}, ConverterParameter=5, Mode=TwoWay}">
                <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_star}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </ToggleButton>
        </StackPanel>

        <local:NotesTabControl  Grid.Row="6" Grid.ColumnSpan="5" Grid.Column="0"></local:NotesTabControl>
    </Grid>
</UserControl>
